{"version":3,"sources":["AddForm.js","TodoItem.js","TodoList.js","Header.js","App.js","reportWebVitals.js","index.js"],"names":["AddForm","props","useState","input","setInput","className","onSubmit","e","preventDefault","setTodos","title","status","id","Math","round","random","type","placeholder","value","onChange","target","TodoItem","todo","setStatus","useEffect","onClick","console","log","modifyTodo","deleteTodo","TodoList","todos","map","i","length","localStorage","removeItem","style","cursor","Header","React","Component","App","state","newTodo","undefined","JSON","parse","getItem","bind","prevState","this","setItem","stringify","setState","cTodo","oldTodos","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3508d2b2.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst AddForm = (props) =>{\r\n\r\n    const [input, setInput] = useState('');\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(input !== ''){\r\n            props.setTodos({title: input, status: \"noncompleted\", id:Math.round(Math.random()*500)})\r\n        }\r\n        setInput('')\r\n    }\r\n\r\n    return(\r\n        <div className=\"add-form\">\r\n            <form onSubmit={handleSubmit}>\r\n                <input type=\"text\" placeholder=\"New Todo!\" value={input} onChange={e => setInput(e.target.value)} />\r\n                <input type=\"submit\" value=\"create\" className=\"submit-btn\" />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddForm;","import React, { useEffect, useState } from 'react'\r\n\r\nlet TodoItem = (props) =>{\r\n    const [status, setStatus] = useState(props.todo.status)\r\n\r\n    useEffect(()=>{\r\n        setStatus(props.todo.status)\r\n    }, [props.todo])\r\n    const toggle = (e) =>{\r\n        console.log(props.todo.id)\r\n        props.modifyTodo(props.todo)\r\n    }\r\n\r\n    const deleteItem = () => {\r\n        // console.log(props.todo.id)\r\n        props.deleteTodo(props.todo)\r\n    }\r\n    return(\r\n        <li className={`todo-item ${status === 'noncompleted' ? \"\" : \"todo-completed\"}`}>\r\n            <span>{props.todo.title}</span>\r\n            <span>\r\n                <button onClick={toggle}><i className=\"fa fa-check\"></i></button>\r\n                <button onClick={deleteItem}><i className=\"fa fa-trash\"></i></button>\r\n            </span>\r\n        </li>\r\n    )\r\n}\r\nexport default TodoItem;","import React, {useState, useEffect} from 'react';\r\nimport TodoItem from './TodoItem.js';\r\n\r\nconst TodoList = (props) =>{\r\n    const [todos, setTodos] = useState(props.todos)\r\n    \r\n    useEffect(() =>{\r\n        setTodos(props.todos)\r\n    }, [props.todos])\r\n\r\n    const clearTodos  = () =>{\r\n        props.setTodos([]);\r\n        localStorage.removeItem('todos')\r\n    }\r\n    return(\r\n        <div>\r\n            <ul className=\"todo-list\">\r\n                {\r\n                    todos.map(\r\n                        (todo, i) => \r\n                        <TodoItem todo={todo} key={i} modifyTodo={props.modifyTodo} deleteTodo={props.deleteTodo} />\r\n                        )\r\n                }    \r\n            </ul>\r\n            <div className=\"text-center\">\r\n                {\r\n                    props.todos.length === 0 ?\r\n                        <small>Your Todo list is empty</small> :\r\n                        <footer>\r\n                            <span onClick={clearTodos} style={{cursor: 'pointer'}}>Clear All</span>\r\n                        </footer>\r\n                }    \r\n            </div>        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList;","import React from 'react'\r\n\r\nclass Header extends React.Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div className=\"app-header\">\r\n                    My-Todo-List\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import './App.css';\nimport React from 'react';\nimport AddForm from './AddForm.js';\nimport TodoList from './TodoList.js';\nimport Header from './Header.js';\n\nclass App extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      newTodo: '',\n      todos: localStorage.todos !== undefined ? JSON.parse(localStorage.getItem(\"todos\")) : [],\n    }\n    this.setTodos = this.setTodos.bind(this)\n    this.modifyTodo = this.modifyTodo.bind(this)\n    this.deleteTodo = this.deleteTodo.bind(this)\n  }\n  componentDidUpdate(prevState){\n    if(this.state.todos !== prevState.todos){\n      localStorage.setItem('todos', JSON.stringify(this.state.todos)) // save in localStorage, whenever modifications take place in state.todos\n    }\n  }\n\n  setTodos(todo){\n    if(todo.length === 0)\n      this.setState({todos:[]})\n    else{\n      this.setState({todos: [...this.state.todos, todo]})\n    }\n  }\n  modifyTodo(todo){\n    let oldTodos = [...this.state.todos] // shallow copy of current todos\n    let cTodo;\n    for(let i = 0; i < this.state.todos.length; i++){\n      if(this.state.todos[i].id === todo.id){\n        cTodo = {...this.state.todos[i]} // shallow copy of the todo to be modified\n        if(cTodo.status === 'noncompleted')\n          cTodo.status = 'completed'\n        else  \n          cTodo.status = 'noncompleted'\n\n        oldTodos[i] = cTodo // modify the current todos list shallow copy\n        this.setState({todos: oldTodos}) // set the modified todos into state\n        break;\n      }\n    }\n  }\n\n  deleteTodo(todo){\n    console.log(todo.id)\n    this.setState({\n      todos: \n        this.state.todos.filter(\n          i => i.id !== todo.id // return true for all todos, except for the passed todo\n        )\n    })\n  }\n\n  render(){\n    return (\n      <div>\n        <Header />\n        <AddForm setTodos={this.setTodos} />\n        <TodoList setTodos={this.setTodos} todos={this.state.todos} modifyTodo={this.modifyTodo} deleteTodo={this.deleteTodo} />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}